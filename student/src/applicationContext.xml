<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	 <!-- 激活spring的注解 -->
	 <context:annotation-config/>
	 <!-- 定义受环境影响容易变的变量 -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	       <property name="locations">
	         <list>
	            <value>classpath:jdbc.properties</value>
	         </list>
	       </property>
	 </bean>
	
	 <!-- 启用基于注解方式的IoC配置 -->
	<context:component-scan base-package="com.app.*"/>

	<!-- 启动对@AspectJ注解的支持  --> 
    <aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 配置本地MYSQL数据源 -->
 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
      <property name="driverClass" value="${jdbc.driver}"/>
      <property name="jdbcUrl" value="${jdbc.url}"/>
      <property name="user" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
      <property name="initialPoolSize" value="${jdbc.initialSize}"/>
      <property name="minPoolSize" value="${jdbc.minPoolSize}"/> 
      <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/> 
      <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/> 
      <property name="acquireIncrement" value="10" />
      <property name="maxStatements" value="1000" />
      <property name="acquireRetryAttempts" value="30" />
      <property name="acquireRetryDelay" value="100"/> 
      <property name="idleConnectionTestPeriod" value="60" />
      <property name="breakAfterAcquireFailure" value="false" />
      <property name="testConnectionOnCheckout" value="true" />
	</bean> 
	
	<!-- DAO层 -->
	<!-- Spring为Hibernate提供的一个SessionFactory实体类，它产生的Session会自动绑定到当前线程上-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan"><list><value>com.app.entity</value></list></property>
		
		<!-- 配置Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property>
	</bean>

	<!-- Service层 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
     <!-- 使用注解方式声明事务 -->
     <tx:annotation-driven transaction-manager="transactionManager" />
     
	</beans>